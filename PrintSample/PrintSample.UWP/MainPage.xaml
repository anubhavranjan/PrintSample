<forms:WindowsPage
    x:Class="PrintSample.UWP.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:forms="using:Xamarin.Forms.Platform.UWP"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PrintSample.UWP"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="12,10,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Canvas x:Name="PrintCanvas" Opacity="0"/>
            <StackPanel Margin="0,0,0,10">
                <TextBlock Text="Description:" />
                <TextBlock  TextWrapping="Wrap">
                    Apps can support an in-app print button to invoke the print experience via the print contract.
                </TextBlock>
            </StackPanel>

            <ScrollViewer Grid.Row="1" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top">
                    <!--<Button x:Name="InvokePrintingButton" Content="Print" Click="OnPrintButtonClick"/>-->
                </StackPanel>
            </ScrollViewer>

            <!-- Status Block for providing messages to the user.  Use the NotifyUser() method to populate the message -->
            <TextBlock x:Name="StatusBlock" Grid.Row="2" Margin="12, 10, 12, 10" Visibility="Collapsed"/>
        </Grid>
    </Grid>
</forms:WindowsPage>